pipeline {

  agent {
    label 'Linux'
  }

  stages {
  
    stage('Build') {
    
      steps {
      
        sh 'mvn -B -DskipTests clean package'
        
      }
      
    }
    
    stage('analyse statique') {
      
      steps {
        
        withSonarQubeEnv('SonarQube') {
        // requires SonarQube Scanner for Maven 3.2+
        sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
        
        //sh "mvn clean verify sonar:sonar -Dsonar.projectName=test -Dsonar.projectKey=test -Dsonar.projectVersion=${BUILD_NUMBER}";
    
      }
      
    }
    
    stage('Test') {
    
      steps {
      
        sh 'mvn test'
        
      }
      
      post {
      
        always {
        
          junit 'target/surefire-reports/*.xml'
          
        }
        
      }
      
    }
    
    stage ('Publication du binaire') {

      steps {

        script {

          def server = Artifactory.server('Artifactory')
          def uploadSpec = """{
            "files": [
              {
                "pattern": "target/my-app*.jar",
                "target": "Grotadmorv/rondoudou${BUILD_NUMBER}.jar"
              }
            ]
          }"""
          server.upload(uploadSpec)

        }

      }

    }
    
  }
  
}
